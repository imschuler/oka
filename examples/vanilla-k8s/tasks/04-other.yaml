---
- name: get http_proxy
  shell: grep ^HTTP_PROXY /etc/sysconfig/proxy | sed s'/HTTP_PROXY=\([^ ]*\).*/\1/' | tr -d '"'
  register: http_proxy

- name: get https_proxy
  shell: grep ^HTTPS_PROXY /etc/sysconfig/proxy | sed s'/HTTPS_PROXY=\([^ ]*\).*/\1/' | tr -d '"'
  register: https_proxy

- name: extract SLES version
  shell: grep ^VERSION_ID /etc/os-release | sed s'/VERSION_ID=\([^ ]*\).*/\1/' | tr -d '"'
  register: sles_id

- name: get architecture
  shell: uname -m
  register: varch

- name: two styles for arch variable
  set_fact:
    arch: "{% if varch.stdout == 'x86_64' %}amd64{% else %}arm64{% endif %}"
    arch2: "{% if varch.stdout == 'x86_64' %}x86_64{% else %}aarch64{% endif %}"

- name: install further packages
  zypper:
    name: "{{ item }}"
    state: present
  loop:
    - vim 
    - chrony
  environment:
    - http_proxy: "{{ http_proxy.stdout }}"

- name: configure chrony, prometheus needs accurate time
  template:
    src: chrony.j2
    dest: /etc/chrony.conf
    owner: root
    group: root
    mode: 0644
  when: ntp_server is defined and ntp_server|length 

- name: enable chronyd
  systemd:
    name: chronyd
    state: started 
    enabled: true
    daemon_reload: true
  when: ntp_server is defined and ntp_server|length 

- name: disable proxy
  lineinfile:
    path: /etc/sysconfig/proxy
    line: PROXY_ENABLED=no
    regexp: ^PROXY_ENABLED

- name: install openvswitch for Antrea 
  zypper:
    name: openvswitch 
    state: present
  environment:
    - http_proxy: "{{ http_proxy.stdout }}"
  when: antrea is defined and antrea|length 

- name: download Antrea manifest
  uri:
    url: https://github.com/antrea-io/antrea/releases/download/{{ antrea }}/antrea.yml 
    dest: /home/ansible
  become: false
  environment:
    - https_proxy: "{{ http_proxy.stdout }}"
  when: antrea is defined and antrea|length 

- name: download MetalLb manifest
  uri:
    url: https://raw.githubusercontent.com/metallb/metallb/{{ metallb }}/config/manifests/metallb-native.yaml 
    dest: /home/ansible
  become: false
  environment:
    - https_proxy: "{{ http_proxy.stdout }}"
  when: metallb is defined and metallb|length 

- name: download Cilium CLI
  uri:
    url: https://github.com/cilium/cilium-cli/releases/download/{{ cilium }}/cilium-linux-{{ arch }}.tar.gz
    dest: /home/ansible
  become: false
  environment:
    - https_proxy: "{{ http_proxy.stdout }}"
  when: cilium is defined and cilium|length

- name: download Hubble CLI
  uri:
    url: https://github.com/cilium/hubble/releases/download/{{ hubble }}/hubble-linux-{{ arch }}.tar.gz
    dest: /home/ansible
  become: false
  environment:
    - https_proxy: "{{ http_proxy.stdout }}"
  when: hubble is defined and hubble|length
